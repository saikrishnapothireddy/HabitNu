<div id="<%= dom_id(task) %>" class="task-container">
  <div class="task-details">
    <p>
      <strong>Title:</strong>
      <%= task.title %>
    </p>

    <p>
      <strong>Description:</strong>
      <%= task.description %>
    </p>

    <p>
      <strong>Status:</strong>
      <div class="task-actions">
      <%= form_with(model: task, html: { class: "task-form" }) do |form| %>
        <%= form.select :status, ['To Do', 'In Progress', 'Done'], {}, { class: "status-select" } %>
      <% end %>
      </div>
    </p>
  </div>

  <div class="task-actions">
    <%= button_to "Delete", task, method: :delete, data: { confirm: "Are you sure you want to delete this task?" }, class: "btn btn-danger delete-btn" %>
    <%= link_to "Edit", edit_task_path(task), class: "btn btn-primary show-btn" %>
  </div>
</div>


<script>
document.addEventListener("DOMContentLoaded", function() {
  const statusSelects = document.querySelectorAll(".status-select");
  
  statusSelects.forEach(select => {
    select.addEventListener("change", function() {
      // Find the parent form element
      const form = this.closest("form");
      
      // Serialize form data
      const formData = new FormData(form);
      
      // Submit the form data using AJAX
      fetch(form.action, {
        method: form.method,
        body: formData,
        headers: {
          "X-Requested-With": "XMLHttpRequest"
        }
      })
      .then(response => {
        // Check if the response is successful
        if (response.ok) {
          // Reload the page to display the updated task status
          window.location.reload();
        } else {
          // Handle error if needed
          console.error("Failed to update task status");
        }
      })
      .catch(error => {
        console.error("Error:", error);
      });
    });
  });
});

</script>
